/**
 *
 *  drowave_v1_UserController.cc
 *  This file is generated by drogon_ctl
 *
 */

#include "user/drowave_v1_UserController.h"
#include <string>

using namespace drowave::v1;
using namespace drogon;
using namespace drogon::orm;
void UserController::getOne(const HttpRequestPtr &req, std::function<void(const HttpResponsePtr &)> &&callback,
                            std::string &&id)
{
}

void UserController::get(const HttpRequestPtr &req, std::function<void(const HttpResponsePtr &)> &&callback,
                         Users &&pNewUser)
{
    auto dbClientPtr = drogon::app().getDbClient();
    Mapper<Users> mp(dbClientPtr);
    std::vector<Users> uu = mp.orderBy(Users::Cols::_id).limit(20).offset(0).findAll();
    int i = 0;
    for (auto row : uu)
    {
        std::cout << i++ << ": user name is " << *row.getId() << std::endl;
    }
    // auto newUser = pNewUser;
    Json::Value ret;
    ret["result"] = "ok";
    auto resp = HttpResponse::newHttpJsonResponse(ret);
    callback(resp);
}
void UserController::create(const HttpRequestPtr &req, std::function<void(const HttpResponsePtr &)> &&callback)
{
}
void UserController::updateOne(const HttpRequestPtr &req, std::function<void(const HttpResponsePtr &)> &&callback,
                               std::string &&id)
{
}

/*
void UserController::update(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback)
{

}*/

void UserController::deleteOne(const HttpRequestPtr &req, std::function<void(const HttpResponsePtr &)> &&callback,
                               std::string &&id)
{
}
